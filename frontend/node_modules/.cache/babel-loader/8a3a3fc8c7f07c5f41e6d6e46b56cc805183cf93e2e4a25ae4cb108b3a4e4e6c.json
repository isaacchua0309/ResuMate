{"ast":null,"code":"var _jsxFileName = \"/Users/cheerfuldino/Documents/resume-analyzer/frontend/src/components/FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onFileSelect\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      setSelectedFile(file);\n      onFileSelect(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf,.docx\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected File: \", selectedFile.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","onFileSelect","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","length","file","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/cheerfuldino/Documents/resume-analyzer/frontend/src/components/FileUpload.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ntype FileUploadProps = {\n  onFileSelect: (file: File) => void;\n};\n\nconst FileUpload: React.FC<FileUploadProps> = ({ onFileSelect }) => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      setSelectedFile(file);\n      onFileSelect(file);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\".pdf,.docx\" onChange={handleFileChange} />\n      {selectedFile && <p>Selected File: {selectedFile.name}</p>}\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAc,IAAI,CAAC;EAEnE,MAAMQ,gBAAgB,GAAIC,KAA0C,IAAK;IACvE,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACvD,MAAMC,IAAI,GAAGJ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClCJ,eAAe,CAACM,IAAI,CAAC;MACrBT,YAAY,CAACS,IAAI,CAAC;IACpB;EACF,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAOa,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,YAAY;MAACC,QAAQ,EAAET;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpEf,YAAY,iBAAIJ,OAAA;MAAAY,QAAA,GAAG,iBAAe,EAACR,YAAY,CAACgB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAChB,EAAA,CAjBIF,UAAqC;AAAAoB,EAAA,GAArCpB,UAAqC;AAmB3C,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}